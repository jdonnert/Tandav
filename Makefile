# 
# Code parameters (#define) are in 'Config' file
# 
# The preferred way to set your compilation parameters is to set the
# environment variables $CPPFLAGS and $LDFLAGS in ~/.bashrc
# You can also set $TANDAV_SYSTYPE and then add an entry here.
#
# The Makefile uses all .c and .h files in ./src and its subdirs 
# for compilation automatically. No need to edit this file if you add 
# something.
#
# This Makefile also produces src/config.h and src/print_settings.c from the
# 'Config' file by means of a few lines of bash.
# 

SHELL = /bin/bash 			# This should always be present in a Makefile

ifndef TANDAV_SYSTYPE
TANDAV_SYSTYPE := ${shell hostname}
endif

CC	 	 = mpicc
OPTIMIZE = -Wall -g -O2 
XTRA_INCL = $(CPPFLAGS)
XTRA_LIBS = $(LDFLAGS)

# machine specifics
ifeq ($(TANDAV_SYSTYPE),DARWIN) # any Mac with gcc
CC       =  mpicc
OPTIMIZE =  -Wall -g -fopenmp -std=c99 -fstrict-aliasing  -O3 -mtune=native -march=native  -fopt-info-vec
XTRA_LIBS = -lmpich
XTRA_INCL = 
endif

ifeq ($(TANDAV_SYSTYPE),mach64.ira.inaf.it)
CC       =  mpicc
OPTIMIZE =  -g -O2 -fopenmp -std=c99 -fstrict-aliasing  -march=bdver1 -mtune=native -mprefer-avx128 -mieee-fp  \
			-minline-all-stringops -fprefetch-loop-arrays --param prefetch-latency=300 -funroll-all-loops 
XTRA_LIBS = -L/home/donnert/Libs/lib
XTRA_INCL = -I/home/donnert/Libs/include
endif

ifeq ($(TANDAV_SYSTYPE),MSI)
CC       =  mpicc
OPTIMIZE =  -Wall -g -fopenmp -std=c99 -fstrict-aliasing -O2 -openmp -xhost  -mkl  -ansi-alias-check 
XTRA_LIBS = -lmpich -L$(LD_LIBRARY_PATH)
XTRA_INCL = -I$(INCLUDE)
endif

ifeq ($(TANDAV_SYSTYPE),coma.msi.umn.edu)
CC       =  mpicc
OPTIMIZE =  -Wall -g -fopenmp -std=c99 -fstrict-aliasing  -O3 -openmp -xhost  -mkl  -ansi-alias-check \
			-ipo -ipo-jobs8
XTRA_LIBS = -lmpich -L$(LD_LIBRARY_PATH)
XTRA_INCL = -I$(INCLUDE)
endif

ifeq ($(TANDAV_SYSTYPE),CRAY)
CC       =  cc
OPTIMIZE =  
XTRA_LIBS = -L/home/users/n17421/Libs/lib
XTRA_INCL = -I/home/users/n17421/Libs/include
endif

# end systypes

EXEC = Tandav

SRCDIR = src

SRCFILES := ${shell find $(SRCDIR) -name \*.c -print}
SRCFILES += $(SRCDIR)/print_settings.c

INCLFILES := ${shell find src -name \*.h -print}
INCLFILES += Config Makefile $(SRCDIR)/config.h

OBJFILES = $(SRCFILES:.c=.o)

CFLAGS = $(OPTIMIZE) $(XTRA_INCL) 

LIBS = -lm -lgsl -lgslcblas $(XTRA_LIBS)

# rules

%.o : %.c
	@echo [CC] $@
	@$(CC) $(CFLAGS)  -o $@ -c $<

$(EXEC)	: settings $(OBJFILES)
	$(CC) $(CFLAGS) $(OBJFILES) $(LIBS) -o $(EXEC)
	@ctags -w -t -d $(OBJFILES) $(INCS)

$(OBJFILES)	: $(INCLFILES)

$(SRCDIR)/config.h : Config 
	@echo Generating $(SRCDIR)/config.h from Config
	@sed '/^#/d; /^$$/d; s/^/#define /g' Config > $(SRCDIR)/config.h

$(SRCDIR)/print_settings.c : Config	# does not work with sh, needs bash
	@echo Generating $(SRCDIR)/print_settings.c from Config
	@echo '/* Autogenerated File  */' >  $(SRCDIR)/print_settings.c
	@echo '#include "globals.h"' >>  $(SRCDIR)/print_settings.c
	@echo '#include "proto.h"' >>  $(SRCDIR)/print_settings.c
	@echo 'void Print_compile_time_settings(){' >> $(SRCDIR)/print_settings.c
	@echo '	rprintf("Compiled with : \n"' >> $(SRCDIR)/print_settings.c
	@sed '/^#/d; /^$$/d; s/^/"      /g; s/$$/ \\n"/g;' Config >> \
		$(SRCDIR)/print_settings.c
	@echo '); return ;}' >> $(SRCDIR)/print_settings.c

.PHONY : settings

settings :
	@echo " "
	@echo 'CC = ' $(CC)
	@echo 'SYSTYPE =' $(TANDAV_SYSTYPE)
	@echo 'CFLAGS =' $(CFLAGS)
	@echo 'LDFLAGS =' $(LIBS)
	@echo 'EXEC =' $(EXEC)
	@echo " "

clean : settings
	rm -f $(OBJFILES) $(EXEC) src/config.h src/print_settings.c
